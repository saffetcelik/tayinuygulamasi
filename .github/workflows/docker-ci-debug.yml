name: Docker Image CI Debug

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Debug - List project structure
      run: |
        echo "📁 Project structure:"
        find . -name "*.Dockerfile" -o -name "docker-compose.yml" -o -name "Dockerfile"
        echo ""
        echo "📁 Dockerfiles directory:"
        ls -la dockerfiles/ || echo "dockerfiles directory not found"
    
    - name: Build Backend Docker image
      run: |
        echo "🔨 Building Backend Docker image..."
        echo "Current directory: $(pwd)"
        echo "Dockerfile path: dockerfiles/backend.Dockerfile"
        
        if [ -f "dockerfiles/backend.Dockerfile" ]; then
          echo "✅ Dockerfile found, starting build..."
          docker build . --file dockerfiles/backend.Dockerfile --tag tayin-backend:latest --no-cache
          echo "✅ Backend build completed"
        else
          echo "❌ backend.Dockerfile not found"
          exit 1
        fi
    
    - name: Build Frontend Docker image
      run: |
        echo "🔨 Building Frontend Docker image..."
        echo "Current directory: $(pwd)"
        echo "Dockerfile path: dockerfiles/frontend.Dockerfile"
        
        if [ -f "dockerfiles/frontend.Dockerfile" ]; then
          echo "✅ Dockerfile found, starting build..."
          docker build . --file dockerfiles/frontend.Dockerfile --tag tayin-frontend:latest --no-cache
          echo "✅ Frontend build completed"
        else
          echo "❌ frontend.Dockerfile not found"
          exit 1
        fi
    
    - name: Verify Docker images
      run: |
        echo "📋 Listing all Docker images:"
        docker images
        echo ""
        echo "📋 Tayin specific images:"
        docker images | grep tayin || echo "No tayin images found"
    
    - name: Test Docker Compose (if exists)
      run: |
        if [ -f "docker-compose.yml" ]; then
          echo "🧪 Testing Docker Compose configuration..."
          docker-compose config
          echo "✅ Docker Compose configuration is valid!"
        else
          echo "⚠️ docker-compose.yml not found, skipping compose test"
        fi
    
    - name: Clean up Docker images
      if: always()
      run: |
        echo "🧹 Cleaning up Docker images..."
        docker rmi tayin-backend:latest tayin-frontend:latest || true
        echo "✅ Cleanup completed!"
