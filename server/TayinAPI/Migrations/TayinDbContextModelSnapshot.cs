// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TayinAPI.Data;

#nullable disable

namespace TayinAPI.Migrations
{
    [DbContext(typeof(TayinDbContext))]
    partial class TayinDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TayinAPI.Models.Adliye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdliyeAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adliye_adi");

                    b.Property<string>("Adres")
                        .HasColumnType("text")
                        .HasColumnName("adres");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("adliyeler");
                });

            modelBuilder.Entity("TayinAPI.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ProfilResmi")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Rol")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("SonGirisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Adminler");
                });

            modelBuilder.Entity("TayinAPI.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BasariliMi")
                        .HasColumnType("text");

                    b.Property<string>("DetayBilgi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HataBilgisi")
                        .HasColumnType("text");

                    b.Property<string>("IpAdresi")
                        .HasColumnType("text");

                    b.Property<string>("IslemTuru")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("IslemZamani")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("text");

                    b.Property<string>("KullaniciSicilNo")
                        .HasColumnType("text");

                    b.Property<string>("TarayiciBilgisi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Loglar");
                });

            modelBuilder.Entity("TayinAPI.Models.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ad");

                    b.Property<DateTime?>("BaslamaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("baslama_tarihi");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dogum_tarihi");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<int?>("MevcutAdliyeId")
                        .HasColumnType("integer")
                        .HasColumnName("mevcut_adliye_id");

                    b.Property<string>("SicilNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("sicil_no");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sifre");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("soyad");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefon");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("unvan");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MevcutAdliyeId");

                    b.ToTable("personel");
                });

            modelBuilder.Entity("TayinAPI.Models.SikcaSorulanSoru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif_mi");

                    b.Property<string>("Cevap")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cevap");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("eklenme_tarihi");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("guncellenme_tarihi");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("kategori");

                    b.Property<int>("SiraNo")
                        .HasColumnType("integer")
                        .HasColumnName("sira_no");

                    b.Property<string>("Soru")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("soru");

                    b.HasKey("Id");

                    b.ToTable("sikcasorulansorular");
                });

            modelBuilder.Entity("TayinAPI.Models.TayinTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<DateTime>("BasvuruTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("basvuru_tarihi");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<string>("TalepDurumu")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("talep_durumu");

                    b.Property<string>("TalepTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("talep_turu");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("tayin_talepleri");
                });

            modelBuilder.Entity("TayinAPI.Models.TayinTercihi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdliyeId")
                        .HasColumnType("integer")
                        .HasColumnName("adliye_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("TayinTalebiId")
                        .HasColumnType("integer")
                        .HasColumnName("tayin_talebi_id");

                    b.Property<int>("TercihSirasi")
                        .HasColumnType("integer")
                        .HasColumnName("tercih_sirasi");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("AdliyeId");

                    b.HasIndex("TayinTalebiId");

                    b.ToTable("tayin_tercihleri");
                });

            modelBuilder.Entity("TayinAPI.Models.Personel", b =>
                {
                    b.HasOne("TayinAPI.Models.Adliye", "MevcutAdliye")
                        .WithMany("Personeller")
                        .HasForeignKey("MevcutAdliyeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("MevcutAdliye");
                });

            modelBuilder.Entity("TayinAPI.Models.TayinTalebi", b =>
                {
                    b.HasOne("TayinAPI.Models.Personel", "Personel")
                        .WithMany("TayinTalepleri")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("TayinAPI.Models.TayinTercihi", b =>
                {
                    b.HasOne("TayinAPI.Models.Adliye", "Adliye")
                        .WithMany("TayinTercihleri")
                        .HasForeignKey("AdliyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TayinAPI.Models.TayinTalebi", "TayinTalebi")
                        .WithMany("TayinTercihleri")
                        .HasForeignKey("TayinTalebiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adliye");

                    b.Navigation("TayinTalebi");
                });

            modelBuilder.Entity("TayinAPI.Models.Adliye", b =>
                {
                    b.Navigation("Personeller");

                    b.Navigation("TayinTercihleri");
                });

            modelBuilder.Entity("TayinAPI.Models.Personel", b =>
                {
                    b.Navigation("TayinTalepleri");
                });

            modelBuilder.Entity("TayinAPI.Models.TayinTalebi", b =>
                {
                    b.Navigation("TayinTercihleri");
                });
#pragma warning restore 612, 618
        }
    }
}
